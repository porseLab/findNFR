#!/bin/bash
#PBS -l nodes=1:ppn=4

<<"copyright_info"
bed2domains: merge consecutive genomic coordinates into broad domains of enriched regions
Copyright (C) 2017  Sachin Pundhir (pundhir@binf.ku.dk)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
copyright_info

PVALUE=0.2
DISTRIBUTION="pois"
DISTANCE=0
GENOME="mm9"

#### usage ####
usage() {
	echo Program: "bed2domains (merge consecutive genomic coordinates into broad domains of enriched regions)"
	echo Author: BRIC, University of Copenhagen, Denmark
	echo Version: 1.0
	echo Contact: pundhir@binf.ku.dk
	echo "Usage: bed2domains -i <file> -j <file>"
	echo "Options:"
	echo " -i <file>   [input file containing genomic coordinate in BED format (can be stdin)]"
    echo "             [format: chr start end name score strand]"
    echo " -j <file>   [input BAM file(s) to measure signal]"
    echo "             [if multiple, please separate them by a comma]"
    echo "[OPTIONS]"
    echo " -p <float>  [pvalue for read enrichment (default: 0.2)]"
    echo " -x <int>    [distribution to use for data fit (pois or nbinom) (default: pois)]"
    echo " -d <int>    [maximum distance between enriched regions (peaks) to merge (default: 0)]"
    echo " -g <string> [genome (default: mm9)]"
	echo " -h          [help]"
	echo
	exit 0
}

#### parse options ####
while getopts i:j:p:x:d:g::h ARG; do
	case "$ARG" in
		i) INPUTBEDFILE=$OPTARG;;
        j) BAMFILE=$OPTARG;;
        p) PVALUE=$OPTARG;;
        x) DISTRIBUTION=$OPTARG;;
        d) DISTANCE=$OPTARG;;
        g) GENOME=$OPTARG;;
		h) HELP=1;;
	esac
done

## usage, if necessary file and directories are given/exist
if [ -z "$INPUTBEDFILE" -o -z "$BAMFILE" -o "$HELP" ]; then
	usage
fi

## reformat input file
TMP=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
if [ "$INPUTBEDFILE" == "stdin" ]; then 
    while read LINE; do
        echo "${LINE}"
    done > $TMP
    INPUTBEDFILE=$TMP;
fi

## determine domains of enriched regions (peaks)
zless $INPUTBEDFILE | sortBed -i stdin | perl -ane '
    if(%gap && $gap{chr}=~/^$F[0]$/) {
        $gap{end}=$F[1];
        #$gap{signal}=`coor2expr -i $gap{chr}:$gap{start}-$gap{end} -j '$BAMFILE' -g '$GENOME'`;
        #$signal=`echo -e "$chr\t$start\t$end" | bed2coverage -i stdin -j '$BAMFILE' -g '$GENOME' | cut -f 4`;
        #chomp($gap{signal});
        print "$gap{chr}\t$gap{start}\t$gap{end}\n";
        $gap{start}=$F[2];
    } else {
        %gap=();
        $gap{chr}=$F[0];
        $gap{start}=$F[2];
    }' | bed2expr -i stdin  -j $BAMFILE -g $GENOME | perl -ane '$per_bp_signal=sprintf("%d", ($F[3]*1000)/(($F[2]-$F[1])+1)); chomp($_); print "$per_bp_signal\t$_\n";' | $FINDNFRPATH/share/R/fitDistr.R -i stdin -o fitDistrToGaps.$TMP -d $DISTRIBUTION 2>&1>/dev/null

TOTAL=$(samtools idxstats $BAMFILE | perl -ane '$sum+=$F[2]; END { print "$sum\n";}');

for pVal in 0.05 0.1 0.15 0.20 0.25 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 0.75 0.80 0.85 0.90 0.95 1.0; do
    cat <(cut -f 1-3,5 $INPUTBEDFILE) <(cat fitDistrToGaps.$TMP | perl -ane 'if($F[5]<'$pVal') { print "$F[1]\t$F[2]\t$F[3]\t$F[4]\n"; }') | sortBed -i stdin | bedtools merge -c 4,4 -o sum,count -d $DISTANCE | perl -ane '$sum+=$F[3]; $count+=$F[4]; END { print "'$pVal'\t$sum\t'$TOTAL'\t$count\n"; }'
done > h3k27me3.stat

cat <(cut -f 1-3,5 $INPUTBEDFILE) <(cat fitDistrToGaps.$TMP | perl -ane 'if($F[5]<'$PVALUE') { print "$F[1]\t$F[2]\t$F[3]\t$F[4]\n"; }') | sortBed -i stdin | bedtools merge -c 4 -o sum -d $DISTANCE

# | perl -ane 'print "$F[3]\t$F[0]\t$F[1]\t$F[2]\n";' | $FINDNFRPATH/share/R/fitDistr.R -i stdin -o $INPUTBEDFILE.domains -d nbinom

## remove temporary file, if exists
if [ ! -z "$TMP" ]; then
    rm $TMP;
fi

exit
